---
version: '3'

services:
  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_HOST: ${PG_DB_HOST}
      DB_NAME: ${PG_DB_NAME}
      DB_PASS: ${PG_DB_PASS}
      DB_USER: ${PG_DB_USER}
    ports:
      - "8081:80"
      # * Causes the backoff/retry to not exit and instead infinitely respawn the container
    restart: always

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "8080:80"
    restart: always

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_NAME: ${MONGO_DB_NAME}
      DB_PASS: ${MONGO_DB_PASS}
      DB_USER: ${MONGO_DB_USER}
    restart: always

  mongo:
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASS}
    image: 'mongo:4.4'
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - ./db-data/mongo/:/data/db

  postgres:
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASS}
      POSTGRES_DB: ${PG_DB_NAME}
    image: 'postgres:15-alpine'
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

